@model ProductModel
@{
    ViewData["Title"] = @Model.MetaTitle ?? Model.Name;
    var description = false;
    var imgIndex = 0;
}

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <center>
                @{ 
                    var mainImageSrc = "/images/system/no-image.png";
                    if (Model.MainImage != null)
                    {
                        mainImageSrc = Model.MainImage;
                    }
                }
                <img src="@mainImageSrc"
                     class="product-main-image img-fluid"
                     alt="@Model.Name"
                     data-toggle="modal"
                     data-target="#lightbox-modal"
                     data-img-index="0" />
            </center>
            @if (Model.ProductImages.Count > 0)
            {
                <div class="row">
                    <div class="col-md-12 product-image-container">
                        @foreach (var img in Model.ProductImages)
                        {
                            <div class="product-image-thumbnail-container">
                                <img src="@img"
                                     class="product-image-thumbnail"
                                     data-toggle="modal"
                                     data-target="#lightbox-modal"
                                     data-img-index="@imgIndex" />
                            </div>

                            imgIndex++;
                        }
                    </div>
                </div>
            }
        </div>
        <div class="col-md-8">
            <h4>@Model.Name</h4>
            @if (Model.Rating > 0)
            {
                <span title="rating">
                    @{
                        int activeStar = 0;
                        int roundedRating = Convert.ToInt32(Math.Round(Model.Rating, 0, MidpointRounding.AwayFromZero));
                    }
                    @for (int i = 0; i < roundedRating; i++)
                    {
                        <i class="fa fa-star star-active"></i>
                        activeStar++;
                    }
                    @for (int i = 0; i < 5 - activeStar; i++)
                    {
                        <i class="fa fa-star star-inactive"></i>
                    }
                </span>
                <h6 class="text-muted" style="display: inline-block;">
                    @Model.Rating.ToString("N2")
                </h6>
                <span id="reviewCount" class="text-muted review-count" title="review counts">(@Model.ReviewCount)</span>
                <small><a asp-controller="CreateReview" asp-action="@Model.Id">write a review</a></small>
            }            
            @{
                var mLink = new List<string>();
                foreach (var manufacturer in Model.Manufacturers)
                {
                    mLink.Add($"<a href=\"/Manufacturer/{manufacturer.Name}\">{ @manufacturer.Name}</a>");
                }
            }
            <h6>@Html.Raw(string.Join(", ", mLink))</h6>
            @if (Model.OldPrice > 0)
            {
                <h6>
                    <strike class="text-muted">@Model.OldPrice.ToString("C2")</strike> @Html.Raw(Model.Price.ToString("C2"))
                </h6>
            }
            else
            {
                <h6>@Model.Price.ToString("C2")</h6>
            }
            <form asp-area="" asp-controller="Cart" asp-action="Add" method="post">
                <input type="hidden" value="@Model.Id" name="id" />
                <button type="submit" id="addToCart" class="btn btn-primary btn-sm">Add to cart</button>
            </form>
        </div>
    </div> <!-- row end -->
    <br />
    <div class="row">
        <div class="col-md-12">
            <!-- Nav tabs -->
            <ul class="nav nav-tabs" role="tablist" id="product-info-tabs">
                @if ((Model.Description != null && Model.Description.Length > 0) || Model.Specifications.Count == 0)
                {
                    <li class="nav-item">
                        <a class="nav-link active" id="description" data-toggle="tab" href="#descriptionTab" role="tab">Description</a>
                    </li>

                    description = true;
                }
                <li class="nav-item">
                    <a class="nav-link @(description == false ? "active" : "")" id="specification" data-toggle="tab" href="#specificationTab" role="tab">Specification</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="reviews" data-toggle="tab" href="#reviewsTab" role="tab">Reviews</a>
                </li>
            </ul>

            <!-- Tab panes -->
            <div class="tab-content">
                @if ((Model.Description != null && Model.Description.Length > 0) || Model.Specifications.Count == 0)
                {
                    <div class="tab-pane active" id="descriptionTab" role="tabpanel">
                        <br />
                        @await Html.PartialAsync("_ProductDescription", Model)
                    </div>
                }
                <div class="tab-pane @(description == false ? "active" : "")" id="specificationTab" role="tabpanel">
                    <br />
                    @await Html.PartialAsync("_ProductSpecification", Model)
                </div>
                <div class="tab-pane" id="reviewsTab" role="tabpanel">
                    <br />
                    @await Html.PartialAsync("_ProductReview", Model)
                </div>
            </div>
        </div> 
    </div> <!-- row end -->
</div> <!-- container end -->

<!-- lightbox modal -->
<div class="modal fade" id="lightbox-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="border-bottom: none;">
                <h5 class="modal-title text-muted"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="width: 100%; height: 100%;">

                @foreach (var img in Model.ProductImages)
                {
                    <img src="@img" id="modal-img-src" class="lightbox-slide" />
                }

                @if (Model.ProductImages.Count > 1)
                {
                    <a class="prev text-muted">&#10094;</a>
                    <a class="next text-muted">&#10095;</a>
                }
            </div>
        </div>
    </div>
</div>

<script>
    // lightbox
    $(function () {
        var currentSlide = 0;
        var imgSlides = document.getElementsByClassName('lightbox-slide');

        $('#lightbox-modal').on('show.bs.modal', function (event) {
            let imgIndex = $(event.relatedTarget).data('img-index');

            imgSlides[imgIndex].style.display = 'block';
            currentSlide = imgIndex;
            updateText(currentSlide);
        });

        $('#lightbox-modal').on('hide.bs.modal', function (event) {
            imgSlides[currentSlide].style.display = 'none'; // hide the current image
        });

        $('.next').on('click', function () {
            imgSlides[currentSlide].style.display = 'none';

            if (currentSlide == imgSlides.length - 1) {
                currentSlide = 0; // set the currentSlide to the start of slides
            } else {
                currentSlide++;
            }

            imgSlides[currentSlide].style.display = 'block';
            updateText(currentSlide);
        });

        $('.prev').on('click', function () {
            imgSlides[currentSlide].style.display = 'none';

            if (currentSlide == 0) {
                currentSlide = imgSlides.length - 1; // set the currentSlide to the end of slides
            } else {
                currentSlide--;
            }

            imgSlides[currentSlide].style.display = 'block';
            updateText(currentSlide);
        });

        function updateText(n) {
            $('#lightbox-modal').find('.modal-title').text(n + 1 + ' / ' + imgSlides.length)
        }
    });

    $(function () {
        $('#product-info-tabs li a').on('click', function (e) {
            window.location.hash = '#!#' + e.target.id.toLowerCase();
        });

        $(function () {
            if(window.location.hash.length > 0){
                let id = window.location.hash.replace('#!', '');
                $(id).tab('show');
            }
        })
    });

    $(function () {
        $('#reviewCount').on('click', function () {
            window.location.hash = '#!#reviews';
            $('#reviews').tab('show');
        });
    });
</script>
